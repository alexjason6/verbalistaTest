{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useCallback } from 'react';\nimport { items } from \"../../data/items\";\nimport { suggestions } from \"../../data/suggestions\";\nimport Draggable from \"./components/Dragrable\";\nimport { checkDropZone } from \"../../utils/checkDropZone\";\nimport { DropZone, Clear, IconClear, Input, SafeArea, Text, View } from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Home = function Home() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    handleEvent = _useState2[0],\n    setHandleEvent = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    dropZones = _useState4[0],\n    setDropZones = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    userItems = _useState6[0],\n    setUserItems = _useState6[1];\n  var _useState7 = useState(suggestions),\n    _useState8 = _slicedToArray(_useState7, 2),\n    suggestionsFiltered = _useState8[0],\n    setSuggestionsFilterd = _useState8[1];\n  var dropZonesLayout = function dropZonesLayout(event, itemName) {\n    var _event$nativeEvent$la = event.nativeEvent.layout,\n      x = _event$nativeEvent$la.x,\n      y = _event$nativeEvent$la.y,\n      width = _event$nativeEvent$la.width,\n      height = _event$nativeEvent$la.height;\n    setDropZones(function (prevDropZones) {\n      return [].concat(_toConsumableArray(prevDropZones), [{\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        value: itemName\n      }]);\n    });\n  };\n  var handleSetInput = useCallback(function (value, event, position) {\n    var dropZone = checkDropZone(position, value, event, dropZones);\n    if ((event === 'stoped' || event === 'click') && dropZone) {\n      setUserItems(function (prevState) {\n        var prevExists = prevState == null ? void 0 : prevState.filter(function (prevItem) {\n          return prevItem.name === dropZone[1].name;\n        });\n        if (prevExists) {\n          var removeRepeted = prevState.filter(function (prevItem) {\n            return prevItem.name !== dropZone[1].name;\n          });\n          return [].concat(_toConsumableArray(removeRepeted), [dropZone[1]]);\n        } else {\n          return [dropZone[1]];\n        }\n      });\n    }\n    setHandleEvent(event);\n  }, [dropZones]);\n  var handleFilterSuggestions = function handleFilterSuggestions(value) {\n    var filter = suggestions.filter(function (suggestion) {\n      return suggestion.name.toLowerCase().includes(value.toLowerCase());\n    });\n    setSuggestionsFilterd(filter);\n  };\n  var handleClearInput = function handleClearInput(input) {\n    var userItemRemove = userItems.filter(function (userItem) {\n      return userItem.name !== input;\n    });\n    setUserItems(userItemRemove);\n  };\n  return _jsxs(SafeArea, {\n    children: [items.map(function (item, index) {\n      var _userItems$filter = userItems == null ? void 0 : userItems.filter(function (userItem) {\n          return userItem.name === item.name;\n        }),\n        _userItems$filter2 = _slicedToArray(_userItems$filter, 1),\n        userItemExists = _userItems$filter2[0];\n      return _jsxs(View, {\n        dropZone: true,\n        onLayout: function onLayout(event) {\n          return dropZonesLayout(event, item.name);\n        },\n        children: [_jsx(Text, {\n          allowFontScaling: true,\n          maxFontSizeMultiplier: 2,\n          children: item.name\n        }), _jsx(View, {\n          input: true,\n          children: handleEvent === 'move' && !userItemExists ? _jsx(DropZone, {\n            children: _jsx(Text, {\n              dropZone: true,\n              children: \"Drop a word here!\"\n            })\n          }) : _jsxs(_Fragment, {\n            children: [_jsx(Input, {\n              returnKeyType: index !== items.length - 1 ? 'next' : 'default',\n              value: userItemExists == null ? void 0 : userItemExists.translate,\n              autoCorrect: false,\n              spellCheck: false,\n              keyboardType: \"visible-password\",\n              onChangeText: function onChangeText(value) {\n                return handleFilterSuggestions(value);\n              },\n              correct: !!userItemExists\n            }), userItemExists && _jsx(Clear, {\n              onPress: function onPress() {\n                return handleClearInput(item.name);\n              },\n              children: _jsx(IconClear, {\n                name: \"x\"\n              })\n            })]\n          })\n        })]\n      }, item.value);\n    }), _jsx(View, {\n      draggable: true,\n      children: suggestionsFiltered.map(function (item) {\n        var _userItems$filter3 = userItems == null ? void 0 : userItems.filter(function (userItem) {\n            return userItem.name === item.translate;\n          }),\n          _userItems$filter4 = _slicedToArray(_userItems$filter3, 1),\n          userItemExists = _userItems$filter4[0];\n        return _jsx(Draggable, {\n          item: item,\n          correct: !!userItemExists,\n          func: function func(value, event, position) {\n            return handleSetInput(value, event, position);\n          }\n        }, item.name);\n      })\n    })]\n  });\n};\nexport default Home;","map":{"version":3,"names":["React","useState","useCallback","items","suggestions","Draggable","checkDropZone","DropZone","Clear","IconClear","Input","SafeArea","Text","View","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Home","_useState","_useState2","_slicedToArray","handleEvent","setHandleEvent","_useState3","_useState4","dropZones","setDropZones","_useState5","_useState6","userItems","setUserItems","_useState7","_useState8","suggestionsFiltered","setSuggestionsFilterd","dropZonesLayout","event","itemName","_event$nativeEvent$la","nativeEvent","layout","x","y","width","height","prevDropZones","concat","_toConsumableArray","value","handleSetInput","position","dropZone","prevState","prevExists","filter","prevItem","name","removeRepeted","handleFilterSuggestions","suggestion","toLowerCase","includes","handleClearInput","input","userItemRemove","userItem","children","map","item","index","_userItems$filter","_userItems$filter2","userItemExists","onLayout","allowFontScaling","maxFontSizeMultiplier","returnKeyType","length","translate","autoCorrect","spellCheck","keyboardType","onChangeText","correct","onPress","draggable","_userItems$filter3","_userItems$filter4","func"],"sources":["/Users/alexjason/Desktop/DEV/verbalista/verbalistatest/src/pages/Home/index.tsx"],"sourcesContent":["import React, {useState, useCallback} from 'react';\n\nimport {PropsItems} from '../../types/PropsItems';\nimport {type PropsDropZones} from '../../types/DropZones';\nimport {items} from '../../data/items';\nimport {suggestions} from '../../data/suggestions';\n\nimport Draggable from './components/Dragrable';\nimport {checkDropZone} from '../../utils/checkDropZone';\n\nimport {\n  DropZone,\n  Clear,\n  IconClear,\n  Input,\n  SafeArea,\n  Text,\n  View,\n} from './styles';\n\nexport const Home: React.FC = () => {\n  const [handleEvent, setHandleEvent] = useState('');\n  const [dropZones, setDropZones] = useState<PropsDropZones[]>([]);\n  const [userItems, setUserItems] = useState<PropsItems[]>([]);\n  const [suggestionsFiltered, setSuggestionsFilterd] = useState(suggestions);\n\n  const dropZonesLayout = (event: any, itemName: string) => {\n    const {x, y, width, height} = event.nativeEvent.layout;\n    setDropZones(prevDropZones => [\n      ...prevDropZones,\n      {x, y, width, height, value: itemName},\n    ]);\n  };\n\n  const handleSetInput = useCallback(\n    (value: string, event: string, position: {x: number; y: number}) => {\n      const dropZone = checkDropZone(position, value, event, dropZones);\n\n      if ((event === 'stoped' || event === 'click') && dropZone) {\n        setUserItems(prevState => {\n          const prevExists = prevState?.filter(\n            prevItem => prevItem.name === dropZone[1].name,\n          );\n\n          if (prevExists) {\n            const removeRepeted = prevState.filter(\n              prevItem => prevItem.name !== dropZone[1].name,\n            );\n            return [...removeRepeted, dropZone[1]];\n          } else {\n            return [dropZone[1]];\n          }\n        });\n      }\n      setHandleEvent(event);\n    },\n    [dropZones],\n  );\n\n  const handleFilterSuggestions = (value: string) => {\n    const filter = suggestions.filter(suggestion =>\n      suggestion.name.toLowerCase().includes(value.toLowerCase()),\n    );\n\n    setSuggestionsFilterd(filter);\n  };\n\n  const handleClearInput = (input: string) => {\n    const userItemRemove = userItems.filter(\n      userItem => userItem.name !== input,\n    );\n\n    setUserItems(userItemRemove);\n  };\n\n  return (\n    <SafeArea>\n      {items.map((item: {name: string; value: number}, index: number) => {\n        const [userItemExists]: any = userItems?.filter(\n          userItem => userItem.name === item.name,\n        );\n        return (\n          <View\n            dropZone\n            key={item.value}\n            onLayout={(event: any) => dropZonesLayout(event, item.name)}>\n            <Text allowFontScaling={true} maxFontSizeMultiplier={2}>\n              {item.name}\n            </Text>\n            <View input>\n              {handleEvent === 'move' && !userItemExists ? (\n                <DropZone>\n                  <Text dropZone>Drop a word here!</Text>\n                </DropZone>\n              ) : (\n                <>\n                  <Input\n                    returnKeyType={\n                      index !== items.length - 1 ? 'next' : 'default'\n                    }\n                    value={userItemExists?.translate}\n                    autoCorrect={false}\n                    spellCheck={false}\n                    keyboardType=\"visible-password\"\n                    onChangeText={(value: string) =>\n                      handleFilterSuggestions(value)\n                    }\n                    correct={!!userItemExists}\n                  />\n                  {userItemExists && (\n                    <Clear onPress={() => handleClearInput(item.name)}>\n                      <IconClear name=\"x\" />\n                    </Clear>\n                  )}\n                </>\n              )}\n            </View>\n          </View>\n        );\n      })}\n      <View draggable>\n        {suggestionsFiltered.map(item => {\n          const [userItemExists] = userItems?.filter(\n            userItem => userItem.name === item.translate,\n          );\n          return (\n            <Draggable\n              key={item.name}\n              item={item}\n              correct={!!userItemExists}\n              func={(\n                value: any,\n                event: any,\n                position: {x: number; y: number},\n              ) => handleSetInput(value, event, position)}\n            />\n          );\n        })}\n      </View>\n    </SafeArea>\n  );\n};\n\nexport default Home;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,WAAW,QAAO,OAAO;AAIlD,SAAQC,KAAK;AACb,SAAQC,WAAW;AAEnB,OAAOC,SAAS;AAChB,SAAQC,aAAa;AAErB,SACEC,QAAQ,EACRC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,QAAQ,EACRC,IAAI,EACJC,IAAI;AACY,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAElB,OAAO,IAAMC,IAAc,GAAG,SAAjBA,IAAcA,CAAA,EAAS;EAClC,IAAAC,SAAA,GAAsCpB,QAAQ,CAAC,EAAE,CAAC;IAAAqB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3CG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAClC,IAAAI,UAAA,GAAkCzB,QAAQ,CAAmB,EAAE,CAAC;IAAA0B,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAzDE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAC9B,IAAAG,UAAA,GAAkC7B,QAAQ,CAAe,EAAE,CAAC;IAAA8B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAArDE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAC9B,IAAAG,UAAA,GAAqDjC,QAAQ,CAACG,WAAW,CAAC;IAAA+B,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAAnEE,mBAAmB,GAAAD,UAAA;IAAEE,qBAAqB,GAAAF,UAAA;EAEjD,IAAMG,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,KAAU,EAAEC,QAAgB,EAAK;IACxD,IAAAC,qBAAA,GAA8BF,KAAK,CAACG,WAAW,CAACC,MAAM;MAA/CC,CAAC,GAAAH,qBAAA,CAADG,CAAC;MAAEC,CAAC,GAAAJ,qBAAA,CAADI,CAAC;MAAEC,KAAK,GAAAL,qBAAA,CAALK,KAAK;MAAEC,MAAM,GAAAN,qBAAA,CAANM,MAAM;IAC1BlB,YAAY,CAAC,UAAAmB,aAAa;MAAA,UAAAC,MAAA,CAAAC,kBAAA,CACrBF,aAAa,IAChB;QAACJ,CAAC,EAADA,CAAC;QAAEC,CAAC,EAADA,CAAC;QAAEC,KAAK,EAALA,KAAK;QAAEC,MAAM,EAANA,MAAM;QAAEI,KAAK,EAAEX;MAAQ,CAAC;IAAA,CACvC,CAAC;EACJ,CAAC;EAED,IAAMY,cAAc,GAAGlD,WAAW,CAChC,UAACiD,KAAa,EAAEZ,KAAa,EAAEc,QAAgC,EAAK;IAClE,IAAMC,QAAQ,GAAGhD,aAAa,CAAC+C,QAAQ,EAAEF,KAAK,EAAEZ,KAAK,EAAEX,SAAS,CAAC;IAEjE,IAAI,CAACW,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,OAAO,KAAKe,QAAQ,EAAE;MACzDrB,YAAY,CAAC,UAAAsB,SAAS,EAAI;QACxB,IAAMC,UAAU,GAAGD,SAAS,oBAATA,SAAS,CAAEE,MAAM,CAClC,UAAAC,QAAQ;UAAA,OAAIA,QAAQ,CAACC,IAAI,KAAKL,QAAQ,CAAC,CAAC,CAAC,CAACK,IAAI;QAAA,CAChD,CAAC;QAED,IAAIH,UAAU,EAAE;UACd,IAAMI,aAAa,GAAGL,SAAS,CAACE,MAAM,CACpC,UAAAC,QAAQ;YAAA,OAAIA,QAAQ,CAACC,IAAI,KAAKL,QAAQ,CAAC,CAAC,CAAC,CAACK,IAAI;UAAA,CAChD,CAAC;UACD,UAAAV,MAAA,CAAAC,kBAAA,CAAWU,aAAa,IAAEN,QAAQ,CAAC,CAAC,CAAC;QACvC,CAAC,MAAM;UACL,OAAO,CAACA,QAAQ,CAAC,CAAC,CAAC,CAAC;QACtB;MACF,CAAC,CAAC;IACJ;IACA7B,cAAc,CAACc,KAAK,CAAC;EACvB,CAAC,EACD,CAACX,SAAS,CACZ,CAAC;EAED,IAAMiC,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAIV,KAAa,EAAK;IACjD,IAAMM,MAAM,GAAGrD,WAAW,CAACqD,MAAM,CAAC,UAAAK,UAAU;MAAA,OAC1CA,UAAU,CAACH,IAAI,CAACI,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACb,KAAK,CAACY,WAAW,CAAC,CAAC,CAAC;IAAA,CAC7D,CAAC;IAED1B,qBAAqB,CAACoB,MAAM,CAAC;EAC/B,CAAC;EAED,IAAMQ,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,KAAa,EAAK;IAC1C,IAAMC,cAAc,GAAGnC,SAAS,CAACyB,MAAM,CACrC,UAAAW,QAAQ;MAAA,OAAIA,QAAQ,CAACT,IAAI,KAAKO,KAAK;IAAA,CACrC,CAAC;IAEDjC,YAAY,CAACkC,cAAc,CAAC;EAC9B,CAAC;EAED,OACEhD,KAAA,CAACR,QAAQ;IAAA0D,QAAA,GACNlE,KAAK,CAACmE,GAAG,CAAC,UAACC,IAAmC,EAAEC,KAAa,EAAK;MACjE,IAAAC,iBAAA,GAA8BzC,SAAS,oBAATA,SAAS,CAAEyB,MAAM,CAC7C,UAAAW,QAAQ;UAAA,OAAIA,QAAQ,CAACT,IAAI,KAAKY,IAAI,CAACZ,IAAI;QAAA,CACzC,CAAC;QAAAe,kBAAA,GAAAnD,cAAA,CAAAkD,iBAAA;QAFME,cAAc,GAAAD,kBAAA;MAGrB,OACEvD,KAAA,CAACN,IAAI;QACHyC,QAAQ;QAERsB,QAAQ,EAAE,SAAAA,SAACrC,KAAU;UAAA,OAAKD,eAAe,CAACC,KAAK,EAAEgC,IAAI,CAACZ,IAAI,CAAC;QAAA,CAAC;QAAAU,QAAA,GAC5DtD,IAAA,CAACH,IAAI;UAACiE,gBAAgB,EAAE,IAAK;UAACC,qBAAqB,EAAE,CAAE;UAAAT,QAAA,EACpDE,IAAI,CAACZ;QAAI,CACN,CAAC,EACP5C,IAAA,CAACF,IAAI;UAACqD,KAAK;UAAAG,QAAA,EACR7C,WAAW,KAAK,MAAM,IAAI,CAACmD,cAAc,GACxC5D,IAAA,CAACR,QAAQ;YAAA8D,QAAA,EACPtD,IAAA,CAACH,IAAI;cAAC0C,QAAQ;cAAAe,QAAA,EAAC;YAAiB,CAAM;UAAC,CAC/B,CAAC,GAEXlD,KAAA,CAAAF,SAAA;YAAAoD,QAAA,GACEtD,IAAA,CAACL,KAAK;cACJqE,aAAa,EACXP,KAAK,KAAKrE,KAAK,CAAC6E,MAAM,GAAG,CAAC,GAAG,MAAM,GAAG,SACvC;cACD7B,KAAK,EAAEwB,cAAc,oBAAdA,cAAc,CAAEM,SAAU;cACjCC,WAAW,EAAE,KAAM;cACnBC,UAAU,EAAE,KAAM;cAClBC,YAAY,EAAC,kBAAkB;cAC/BC,YAAY,EAAE,SAAAA,aAAClC,KAAa;gBAAA,OAC1BU,uBAAuB,CAACV,KAAK,CAAC;cAAA,CAC/B;cACDmC,OAAO,EAAE,CAAC,CAACX;YAAe,CAC3B,CAAC,EACDA,cAAc,IACb5D,IAAA,CAACP,KAAK;cAAC+E,OAAO,EAAE,SAAAA,QAAA;gBAAA,OAAMtB,gBAAgB,CAACM,IAAI,CAACZ,IAAI,CAAC;cAAA,CAAC;cAAAU,QAAA,EAChDtD,IAAA,CAACN,SAAS;gBAACkD,IAAI,EAAC;cAAG,CAAE;YAAC,CACjB,CACR;UAAA,CACD;QACH,CACG,CAAC;MAAA,GAhCFY,IAAI,CAACpB,KAiCN,CAAC;IAEX,CAAC,CAAC,EACFpC,IAAA,CAACF,IAAI;MAAC2E,SAAS;MAAAnB,QAAA,EACZjC,mBAAmB,CAACkC,GAAG,CAAC,UAAAC,IAAI,EAAI;QAC/B,IAAAkB,kBAAA,GAAyBzD,SAAS,oBAATA,SAAS,CAAEyB,MAAM,CACxC,UAAAW,QAAQ;YAAA,OAAIA,QAAQ,CAACT,IAAI,KAAKY,IAAI,CAACU,SAAS;UAAA,CAC9C,CAAC;UAAAS,kBAAA,GAAAnE,cAAA,CAAAkE,kBAAA;UAFMd,cAAc,GAAAe,kBAAA;QAGrB,OACE3E,IAAA,CAACV,SAAS;UAERkE,IAAI,EAAEA,IAAK;UACXe,OAAO,EAAE,CAAC,CAACX,cAAe;UAC1BgB,IAAI,EAAE,SAAAA,KACJxC,KAAU,EACVZ,KAAU,EACVc,QAAgC;YAAA,OAC7BD,cAAc,CAACD,KAAK,EAAEZ,KAAK,EAAEc,QAAQ,CAAC;UAAA;QAAC,GAPvCkB,IAAI,CAACZ,IAQX,CAAC;MAEN,CAAC;IAAC,CACE,CAAC;EAAA,CACC,CAAC;AAEf,CAAC;AAED,eAAevC,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}